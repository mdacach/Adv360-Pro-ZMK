#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"

        gpipe: grave_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_pipe";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        tpipe: tilde_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "tilde_pipe";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&kp PIPE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        pkp_n1: plus_kp_n1 {
            compatible = "zmk,behavior-mod-morph";
            label = "plus_kp_n1";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp N1>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        lkp_n2: left_bracket_kp_n2 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_bracket_kp_n2";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp N2>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        lkp_n3: left_brace_kp_n3 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_brace_kp_n3";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp N3>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        lkp_n4: left_parenthesis_kp_n4 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_parenthesis_kp_n4";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        akp_n5: amps_kp_n5 {
            compatible = "zmk,behavior-mod-morph";
            label = "amps_kp_n5";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp N5>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        ekp_n6: equal_kp_n6 {
            compatible = "zmk,behavior-mod-morph";
            label = "equal_kp_n6";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp N6>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        rkp_n7: right_parenthesis_kp_n7 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_parenthesis_kp_n7";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        rkp_n8: right_brace_kp_n8 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_brace_kp_n8";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACE>, <&kp N8>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        rkp_n9: right_bracket_kp_n9 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_bracket_kp_n9";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp N9>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        skp_n0: star_kp_n0 {
            compatible = "zmk,behavior-mod-morph";
            label = "star_kp_n0";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp N0>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        eprcnt: excl_prcnt {
            compatible = "zmk,behavior-mod-morph";
            label = "excl_prcnt";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp PRCNT>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        dgrave: dllr_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "dllr_grave";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        dtilde: dllr_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "dllr_tilde";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp TILDE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        ggrave: grave_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_grave";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        bhash: bslh_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "bslh_hash";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp HASH>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        acaret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "at_caret";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        left_homerow_mod: left_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <22 40 23 24 25 26 41 42 43 44 55 56 57 58 54 8 9 10 11 12>;
        };

        right_homerow_mod: right_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 2 3 4 5 15 16 17 18 19 29 30 31 32 33 47 48 49 50 51>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default-qwerty {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3          &kp N4           &kp N5  &none                                                          &none      &kp N6  &kp N7        &kp N8          &kp N9            &kp N0             &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E           &kp R            &kp T   &none                                                          &none      &kp Y   &kp U         &kp I           &kp O             &kp P              &kp BSLH
&kp ESC    &kp A      &kp S     &kp D           &kp F            &kp G   &to 1          &kp LCTRL   &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp J         &kp K           &kp L             &kp SEMI           &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C           &kp V            &kp B                              &kp HOME      &kp PG_UP                        &kp N   &kp M         &kp COMMA       &kp PERIOD        &kp SLASH          &kp RSHFT
&none      &kp GRAVE  &kp CAPS  &kp LEFT_ARROW  &kp RIGHT_ARROW          &kp BACKSPACE  &kp DELETE  &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
            >;
        };

        real-prog-dvorak {
            bindings = <
&gpipe     &pkp_n1                    &lkp_n2                   &lkp_n3                   &lkp_n4                    &akp_n5  &none                                                          &none      &ekp_n6  &rkp_n7                     &rkp_n8                    &rkp_n9                    &skp_n0                     &eprcnt
&kp TAB    &kp SEMI                   &kp COMMA                 &kp DOT                   &kp P                      &kp Y    &to 0                                                          &none      &kp F    &kp G                       &kp C                      &kp R                      &kp L                       &bhash
&kp ESC    &left_homerow_mod LCTRL A  &left_homerow_mod LALT O  &left_homerow_mod LGUI E  &left_homerow_mod LSHFT U  &kp I    &none          &kp LCTRL   &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp D    &right_homerow_mod RSHFT H  &right_homerow_mod RGUI T  &right_homerow_mod RALT N  &right_homerow_mod RCTRL S  &kp MINUS
&kp LSHFT  &kp APOS                   &kp Q                     &kp J                     &kp K                      &kp X                               &kp HOME      &kp PG_UP                        &kp B    &kp M                       &kp W                      &kp V                      &kp Z                       &kp RSHFT
&none      &dtilde                    &kp CAPS                  &kp LEFT_ARROW            &kp RIGHT_ARROW                     &kp BACKSPACE  &kp DELETE  &kp END       &kp PG_DN  &kp ENTER  &kp SPACE           &kp UP_ARROW                &kp DOWN_ARROW             &kp SLASH                  &acaret                     &none
            >;
        };
    };
};
